@page "/calculator"
@inherits BlazorShWebsite.Client.EveryPage.PageComponent
@using System.Collections.Immutable
@using BlazorShWebsite.Client.Components
@using BlazorShWebsite.Client.Services.Calculator

@{
    var title = "Calculator";
    ImmutableList<string> infoParagraphs = [
        "The first application I created that was initially served as a static website serving only the WASM app.",
        "The idea was to see what UI could be accomplished using C#.",
        "The calculator itself is very simple, permitting integer operations using some inheritance to allow the operation pool to be extended in the future"
    ];
}

<SuffixedPageTitle Title="@title" />

<HeadContent>
    <meta name="description" content="A simple calculator written only in C# using blazor wasm">
</HeadContent>

<div class="page-wrapper">
    <StylesForCalculator/>
    <div class="calculator">
        <p class="result">@_calculator.Calculate()</p>
        <p class="input">@_calculator.GetInput()</p>
        <div class="buttons">
            <div class="button-group">
                @foreach (var digit in Enumerable.Range(1, 9))
                {
                    <button @onclick="@(() => _calculator.AppendInput(digit.ToString()))">@digit</button>
                }
                <button disabled></button>
                <button @onclick="@(() => _calculator.AppendInput("0"))">0</button>
                <button disabled></button>
            </div>
            <div class="button-group">
                <button @onclick="@(() => _calculator.AppendOperator(new AdditionOperator()))">+</button>
                <button @onclick="@(() => _calculator.AppendOperator(new SubtractionOperator()))">-</button>
                <button @onclick="@(() => _calculator.AppendOperator(new DivisionOperator()))">/</button>
                <button @onclick="@(() => _calculator.AppendOperator(new MultiplicationOperator()))">*</button>
                <button @onclick="@(_calculator.Equals)">=</button>
            </div>
        </div>
    </div>
    <div class="history">
        <h2>Current Calculation</h2>
        @foreach (var expression in _calculator.Expressions)
        {
            <p class='@expression.GetClassName()'>@expression.ToString()</p>
        }
    </div>
    <InformationPanel Title="@title" Paragraphs="@infoParagraphs"/>
</div>

@code {
    private readonly Services.Calculator.Calculator _calculator = new();
    
}